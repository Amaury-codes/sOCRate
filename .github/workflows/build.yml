# .github/workflows/build.yml

name: Build sOCRate Executables

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # --- JOB 1 : CONSTRUCTION POUR WINDOWS (INCHANGÉ ET CORRECT) ---
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Tesseract OCR
        run: choco install tesseract-ocr --params='"/l fra,eng,por"' -y
      - name: Build Windows executable
        run: |
          pyinstaller --windowed --onefile --name sOCRate `
          --icon=assets/icon.ico `
          --add-data "C:/Program Files/Tesseract-OCR;Tesseract-OCR" `
          socrate.py
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: sOCRate-Windows-Executable
          path: dist/sOCRate.exe

  # --- JOB 2 : CONSTRUCTION POUR MACOS (AVEC FIX DES PERMISSIONS) ---
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Install Tesseract OCR via Homebrew
        run: brew install tesseract tesseract-lang

      # --- ÉTAPE DE DÉBOGAGE : On regarde ce que PyInstaller a VRAIMENT fait ---
      - name: Build and Package macOS application
        run: |
          # Étape 1 : Construire l'application
          pyinstaller --windowed --name sOCRate \
          --icon=assets/icon.icns \
          --add-data "$(brew --prefix tesseract):Frameworks/Tesseract-OCR" \
          --osx-entitlements-file entitlements.plist \
          socrate.py
          
          # --- DÉBUT DU BLOC DE DÉBOGAGE ---
          # On demande au serveur de nous montrer la liste complète de tous les fichiers créés
          echo "================================================="
          echo "DEBUG: Listing contents of the 'dist' directory..."
          ls -R dist
          echo "================================================="
          # --- FIN DU BLOC DE DÉBOGAGE ---

          # Étape 2 : CORRECTION DES PERMISSIONS (cette ligne va probablement encore échouer, c'est OK)
          echo "Setting execute permissions on Tesseract binary..."
          chmod +x "dist/sOCRate.app/Contents/Frameworks/Tesseract-OCR/bin/tesseract"

          # Étapes suivantes...
          echo "Waiting for 5 seconds..."
          sleep 5
          echo "Packaging into .dmg..."
          hdiutil create dist/sOCRate.dmg -volname "sOCRate" -srcfolder dist/sOCRate.app
          
      # On rajoute l'étape d'upload qui avait disparu
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: sOCRate-macOS-DiskImage
          path: dist/sOCRate.dmg