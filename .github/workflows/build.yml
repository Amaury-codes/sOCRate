# .github/workflows/build.yml

name: Build sOCRate Executables

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # --- JOB 1 : CONSTRUCTION POUR WINDOWS ---
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Tesseract OCR
        run: choco install tesseract-ocr --params='"/l fra,eng,por"' -y
      - name: Build Windows executable
        run: |
          pyinstaller --windowed --onefile --name sOCRate `
          --icon=assets/icon.ico `
          --add-data "C:/Program Files/Tesseract-OCR;Tesseract-OCR" `
          socrate.py
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: sOCRate-Windows-Executable
          path: dist/sOCRate.exe

  # --- JOB 2 : CONSTRUCTION POUR MACOS (VERSION CORRIGÉE) ---
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pyobjc-core pyobjc
      - name: Install Tesseract OCR and dependencies
        run: |
          brew install tesseract leptonica
          
          # Créer le dossier tessdata dans le bundle
          mkdir -p Tesseract-OCR/share/tessdata
          
          # Télécharger les langues directement dans le bundle
          curl -L -o Tesseract-OCR/share/tessdata/eng.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/main/eng.traineddata
          curl -L -o Tesseract-OCR/share/tessdata/fra.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/main/fra.traineddata
          curl -L -o Tesseract-OCR/share/tessdata/por.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/main/por.traineddata
          
          # Copier le binaire Tesseract dans la structure du bundle
          mkdir -p Tesseract-OCR/bin
          cp $(brew --prefix tesseract)/bin/tesseract Tesseract-OCR/bin/
          
          # Vérifier la structure créée
          tree Tesseract-OCR || ls -R Tesseract-OCR

      - name: Build and Package macOS application
        run: |
          # Construire l'application avec la nouvelle structure Tesseract
          pyinstaller --windowed --name sOCRate \
          --icon=assets/icon.icns \
          --add-data "Tesseract-OCR:Tesseract-OCR" \
          --osx-entitlements-file entitlements.plist \
          --noconfirm \
          socrate.py
          
          # Corriger les permissions
          chmod -R 755 dist/sOCRate.app/Contents/Resources/Tesseract-OCR/bin
          
          # Créer le DMG
          hdiutil create dist/sOCRate.dmg -volname "sOCRate" -srcfolder dist/sOCRate.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: sOCRate-macOS-DiskImage
          path: dist/sOCRate.dmg